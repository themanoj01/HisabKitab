@page "/debt"
@using HisabKitab.Model
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
<link rel="stylesheet" href="./css/Transaction.css" />

<div class="container mt-4">
    <!-- Introduction Section -->
    <div class="text-center mb-5">
        <h1 class="display-6 fw-bold text-primary" style="font-size: 1.5rem;">Manage Your Debts with Ease</h1>
        <p class="lead text-muted" style="font-size: 1rem;">Keep track of your debts and stay updated.</p>
    </div>

    <!-- Add Debt Form -->
    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header bg-gradient-primary text-white">
            <h4 class="m-0">Add a New Debt</h4>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Message))
            {
                <div class="alert @(IsSuccess ? "alert-success" : "alert-danger")">
                    @Message
                </div>
            }

            <EditForm Model="@debt" OnValidSubmit="HandleDebtSubmit" class="row g-3">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="col-md-6 form-floating">
                    <InputNumber class="form-control" id="amount" @bind-Value="debt.Amount" required />
                    <label for="amount">Amount</label>
                </div>

                <div class="col-md-6 form-floating">
                    <InputText class="form-control" id="source" @bind-Value="debt.Source" required />
                    <label for="source">Source of Debt</label>
                </div>

                <div class="col-md-6 form-floating">
                    <InputDate class="form-control" id="dueDate" @bind-Value="debt.DueDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                    <label for="dueDate">Due Date</label>
                </div>

                <div class="col-12 form-floating">
                    <textarea class="form-control" id="notes" @bind="debt.Notes" rows="3" placeholder="Add any relevant details"></textarea>
                    <label for="notes">Notes</label>
                </div>

                <div class="col-12 d-flex justify-content-center">
                    <button type="submit" class="btn-add-transaction w-50">+ Add Debt</button>
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Debt History Table -->
    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header bg-gradient-dark text-white">
            <h4 class="m-0">Debt History</h4>
        </div>
        <div class="card-body">
            <table class="table table-hover text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>S.N.</th>
                        <th>Amount</th>
                        <th>Taken Date</th>
                        <th>Due Date</th>
                        <th>Source</th>
                        <th>Notes</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (debts != null && debts.Any())
                    {
                        int serial = (currentPage - 1) * pageSize + 1;
                        foreach (var debt in pagedDebts)
                        {
                            <tr>
                                <td>@serial</td>
                                <td>@debt.Amount</td>
                                <td>@debt.TakenDate.ToString("yyyy-MM-dd")</td>
                                <td>@debt.DueDate.ToString("yyyy-MM-dd")</td>
                                <td>@debt.Source</td>
                                <td>@debt.Notes</td>
                                <td>
                                    <button class="btn btn-warning btn-sm me-2" @onclick="() => OpenEditModal(debt)">Edit</button>
                                    <button class="btn btn-danger btn-sm" @onclick="() => OpenDeleteModal(debt)">Delete</button>
                                </td>
                            </tr>
                            serial++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">No debts found.</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <div class="pagination">
                <button class="btn btn-primary" @onclick="PreviousPage" disabled="@IsPreviousDisabled">Previous</button>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <button class="btn @(currentPage == i ? "btn-secondary" : "btn-light")" @onclick="() => ChangePage(i)">
                        @i
                    </button>
                }
                <button class="btn btn-primary" @onclick="NextPage" disabled="@IsNextDisabled">Next</button>
            </div>
        </div>
    </div>
</div>

@if (isEditModalVisible)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Debt</h5>
                    <button type="button" class="btn-close" @onclick="CloseEditModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@editDebt" OnValidSubmit="HandleEditDebtSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="mb-3">
                            <label class="form-label">Amount</label>
                            <InputNumber class="form-control" @bind-Value="editDebt.Amount" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Source</label>
                            <InputText class="form-control" @bind-Value="editDebt.Source" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Due Date</label>
                            <InputDate class="form-control" @bind-Value="editDebt.DueDate" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Notes</label>
                            <InputTextArea class="form-control" @bind-Value="editDebt.Notes" />
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@if (isDeleteModalVisible)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Debt</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteModal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this debt?</p>
                    <p><strong>@debtToDelete.Source</strong></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseDeleteModal">Cancel</button>
                    <button class="btn btn-danger" @onclick="DeleteDebt">Delete</button>
                </div>
            </div>
        </div>
    </div>
}
